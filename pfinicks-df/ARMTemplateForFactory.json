{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pfinicks-df"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"imdbprojectingest_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'imdbprojectingest'"
		},
		"pfinicks_test_linked_service_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'pfinicks_test_linked_service'"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datasets.imdbws.com/"
		},
		"imdbprojectingest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pfinickscloudstorage.dfs.core.windows.net/"
		},
		"pfinicks_test_linked_service_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pfinickscloudstorage.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/IMDB_data_ingest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('file_names')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "HTTP_source",
											"type": "DatasetReference",
											"parameters": {
												"file_names": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "HTTP_sink",
											"type": "DatasetReference",
											"parameters": {
												"file_names": {
													"value": "@replace(item(),'tsv.gz','pqt')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://management.azure.com/subscriptions/5138f9ef-4e00-425f-a78f-bbba8bad5c22/resourceGroups/pfinicks_de_rg/providers/Microsoft.DataFactory/factories/pfinicks-df/pipelines/IMDB_data_transform/createRun?api-version=2018-06-01",
							"body": {},
							"authentication": {
								"resource": "https://management.azure.com",
								"credential": {
									"referenceName": "credential1",
									"type": "CredentialReference"
								},
								"type": "UserAssignedManagedIdentity"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"file_names": {
						"type": "Array",
						"defaultValue": [
							"name.basics.tsv.gz",
							"title.akas.tsv.gz",
							"title.basics.tsv.gz",
							"title.crew.tsv.gz",
							"title.episode.tsv.gz",
							"title.principals.tsv.gz",
							"title.ratings.tsv.gz"
						]
					},
					"file_name": {
						"type": "Array",
						"defaultValue": [
							"name.basics.pqt",
							"title.akas.pqt",
							"title.basics.pqt",
							"title.crew.pqt",
							"title.episode.pqt",
							"title.principals.pqt",
							"title.ratings.pqt"
						]
					},
					"message_body": {
						"type": "String",
						"defaultValue": "[[{     \"id\": string(rand(1,5000000)) ,\"eventType\": \"PipelineFinished\",     \"subject\": \"pipeline\",     \"eventTime\": \"2024-05-14T15:55:32\",     \"data\": {         \"status\": \"complete\"     },     \"dataVersion\": \"1.0\" }]"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-14T20:36:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/credential1')]",
				"[concat(variables('factoryId'), '/datasets/HTTP_source')]",
				"[concat(variables('factoryId'), '/datasets/HTTP_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IMDB_data_transform')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"source3": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://management.azure.com/subscriptions/5138f9ef-4e00-425f-a78f-bbba8bad5c22/resourceGroups/pfinicks_de_rg/providers/Microsoft.DataFactory/factories/pfinicks-df/pipelines/update_prev_data/createRun?api-version=2018-06-01",
							"body": {},
							"authentication": {
								"resource": "https://management.azure.com",
								"credential": {
									"referenceName": "credential1",
									"type": "CredentialReference"
								},
								"type": "UserAssignedManagedIdentity"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-14T20:41:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/credentials/credential1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/update_prev_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Prev_week_ratings_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Prev_week_ratings_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-14T20:46:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Prev_week_ratings_source')]",
				"[concat(variables('factoryId'), '/datasets/Prev_week_ratings_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_names": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_names",
							"type": "Expression"
						},
						"folderPath": "raw",
						"container": "imdbproject"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTP_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_names": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().file_names",
							"type": "Expression"
						}
					},
					"columnDelimiter": "\t",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prev_week_ratings_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "title.ratings.pqt",
						"folderPath": "prev_week_data",
						"container": "imdbproject"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prev_week_ratings_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "title.ratings.pqt",
						"folderPath": "raw",
						"container": "imdbproject"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "tconst",
						"type": "UTF8"
					},
					{
						"name": "averageRating",
						"type": "UTF8"
					},
					{
						"name": "numVotes",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/curr_ratings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "imdbprojectingest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "title.ratings.pqt",
						"folderPath": "raw",
						"fileSystem": "imdbproject"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "tconst",
						"type": "UTF8"
					},
					{
						"name": "averageRating",
						"type": "UTF8"
					},
					{
						"name": "numVotes",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/imdbprojectingest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/prev_week_ratings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "imdbprojectingest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "title.ratings.pqt",
						"folderPath": "prev_week_data",
						"fileSystem": "imdbproject"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "tconst",
						"type": "UTF8"
					},
					{
						"name": "averageRating",
						"type": "UTF8"
					},
					{
						"name": "numVotes",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/imdbprojectingest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/titles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "title.basics.pqt",
						"folderPath": "raw",
						"container": "imdbproject"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "tconst",
						"type": "UTF8"
					},
					{
						"name": "titleType",
						"type": "UTF8"
					},
					{
						"name": "primaryTitle",
						"type": "UTF8"
					},
					{
						"name": "originalTitle",
						"type": "UTF8"
					},
					{
						"name": "isAdult",
						"type": "UTF8"
					},
					{
						"name": "startYear",
						"type": "UTF8"
					},
					{
						"name": "endYear",
						"type": "UTF8"
					},
					{
						"name": "runtimeMinutes",
						"type": "UTF8"
					},
					{
						"name": "genres",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/transform_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "imdbprojectingest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "title.ratings.pqt",
						"folderPath": "transformed",
						"fileSystem": "imdbproject"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/imdbprojectingest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/imdbprojectingest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('imdbprojectingest_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('imdbprojectingest_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pfinicks_test_linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('pfinicks_test_linked_service_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('pfinicks_test_linked_service_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/updateIMDBData')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "IMDB_data_ingest",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-02-13T19:00:00",
						"timeZone": "W. Central Africa Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/IMDB_data_ingest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "curr_ratings",
								"type": "DatasetReference"
							},
							"name": "source1",
							"description": "Import data from HTTP_sink"
						},
						{
							"dataset": {
								"referenceName": "prev_week_ratings",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "titles",
								"type": "DatasetReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "transform_sink",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to transform_sink"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "cast1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "join2"
						},
						{
							"name": "select2"
						},
						{
							"name": "rank1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          tconst as string,",
						"          averageRating as string,",
						"          numVotes as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source(output(",
						"          tconst as string,",
						"          averageRating as string,",
						"          numVotes as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source2",
						"source(output(",
						"          tconst as string,",
						"          titleType as string,",
						"          primaryTitle as string,",
						"          originalTitle as string,",
						"          isAdult as string,",
						"          startYear as string,",
						"          endYear as string,",
						"          runtimeMinutes as string,",
						"          genres as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source3",
						"source1, source2 join(source1@tconst == source2@tconst,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join2 select(mapColumn(",
						"          primaryTitle,",
						"          averageRating = source1@averageRating,",
						"          numVotes = source1@numVotes,",
						"          pastweek_averageRating = source2@averageRating,",
						"          pastweek_numVotes = source2@numVotes,",
						"          originalTitle,",
						"          genres,",
						"          titleType,",
						"          startYear",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 cast(output(",
						"          averageRating as float,",
						"          numVotes as integer,",
						"          pastweek_averageRating as float,",
						"          pastweek_numVotes as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 derive(diff_ratings = averageRating-pastweek_averageRating,",
						"          diff_vote = numVotes-pastweek_numVotes) ~> derivedColumn1",
						"join1, source3 join(source1@tconst == source3@tconst,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"rank1 select(mapColumn(",
						"          Position,",
						"          Title = primaryTitle,",
						"          Rating = averageRating,",
						"          Votes_this_week = diff_vote,",
						"          Total_votes = numVotes,",
						"          Pastweek_rating = pastweek_averageRating,",
						"          Pastweek_total_votes = pastweek_numVotes,",
						"          original_Title = originalTitle,",
						"          genres,",
						"          Type = titleType,",
						"          Year = startYear,",
						"          diff_ratings",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"derivedColumn1 rank(desc(diff_vote, true),",
						"     output(Position as long)) ~> rank1",
						"select2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:(concat('Transformed', toString(currentTimestamp(),'yyyyMMddHHmmss'),'.pqt')),",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/curr_ratings')]",
				"[concat(variables('factoryId'), '/datasets/prev_week_ratings')]",
				"[concat(variables('factoryId'), '/datasets/titles')]",
				"[concat(variables('factoryId'), '/datasets/transform_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/credential1')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/5138f9ef-4e00-425f-a78f-bbba8bad5c22/resourceGroups/Main/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myUserAssignedMSI"
				}
			},
			"dependsOn": []
		}
	]
}